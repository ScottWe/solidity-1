/**
 * Defines an interactive implementation of all non-deterministic primitive
 * value calls. Data is generated by prompting the user.
 * @date 2019
 */

#include "verify.h"

#include <stdio.h>

void on_entry(const char* _type, const char* _msg)
{
    printf("%s [%s]: ", _msg, _type);
}

SOL_INTEGER_INT8 nd_int8_t(const char* _msg)
{
    on_entry("int8", _msg);
    SOL_INTEGER_INT8 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%hhd", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT16 nd_int16_t(const char* _msg)
{
    on_entry("int16", _msg);
    SOL_INTEGER_INT16 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%hd", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT24 nd_int24_t(const char* _msg)
{
    on_entry("int24", _msg);
    SOL_INTEGER_INT24 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%d", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT32 nd_int32_t(const char* _msg)
{
    on_entry("int32", _msg);
    SOL_INTEGER_INT32 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%d", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT40 nd_int40_t(const char* _msg)
{
    on_entry("int40", _msg);
    SOL_INTEGER_INT40 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%ld", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT48 nd_int48_t(const char* _msg)
{
    on_entry("int48", _msg);
    SOL_INTEGER_INT48 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%ld", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT56 nd_int56_t(const char* _msg)
{
    on_entry("int56", _msg);
    SOL_INTEGER_INT56 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%ld", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT64 nd_int64_t(const char* _msg)
{
    on_entry("int64", _msg);
    SOL_INTEGER_INT64 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%ld", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

#ifdef MC_USE_STDINT
__int128_t nd_stdint_int128_t(void)
{
    char input[41];
    scanf("%s", input);

    const int IS_NEG = (input[0] == '-');
    const int FIRST_DIGIT_POS = (IS_NEG ? 1 : 0);

    __int128_t retval = 0;
    for (unsigned int i = FIRST_DIGIT_POS; input[i] != 0; ++i)
    {
        retval *= 10;
        retval += (__int128_t)(input[i] - '0');
    }

    if (IS_NEG) retval = -retval;

    return retval;
}
#endif

SOL_INTEGER_INT72 nd_int72_t(const char* _msg)
{
    on_entry("int72", _msg);
    SOL_INTEGER_INT72 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT80 nd_int80_t(const char* _msg)
{
    on_entry("int80", _msg);
    SOL_INTEGER_INT80 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT88 nd_int88_t(const char* _msg)
{
    on_entry("int88", _msg);
    SOL_INTEGER_INT88 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT96 nd_int96_t(const char* _msg)
{
    on_entry("int96", _msg);
    SOL_INTEGER_INT96 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT104 nd_int104_t(const char* _msg)
{
    on_entry("int104", _msg);
    SOL_INTEGER_INT104 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT112 nd_int112_t(const char* _msg)
{
    on_entry("int112", _msg);
    SOL_INTEGER_INT112 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT120 nd_int120_t(const char* _msg)
{
    on_entry("int120", _msg);
    SOL_INTEGER_INT120 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT128 nd_int128_t(const char* _msg)
{
    on_entry("int128", _msg);
    SOL_INTEGER_INT128 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT136 nd_int136_t(const char* _msg)
{
    on_entry("int136", _msg);
    SOL_INTEGER_INT136 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT144 nd_int144_t(const char* _msg)
{
    on_entry("int144", _msg);
    SOL_INTEGER_INT144 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT152 nd_int152_t(const char* _msg)
{
    on_entry("int152", _msg);
    SOL_INTEGER_INT152 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT160 nd_int160_t(const char* _msg)
{
    on_entry("int160", _msg);
    SOL_INTEGER_INT160 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT168 nd_int168_t(const char* _msg)
{
    on_entry("int168", _msg);
    SOL_INTEGER_INT168 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT176 nd_int176_t(const char* _msg)
{
    on_entry("int176", _msg);
    SOL_INTEGER_INT176 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT184 nd_int184_t(const char* _msg)
{
    on_entry("int184", _msg);
    SOL_INTEGER_INT184 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT192 nd_int192_t(const char* _msg)
{
    on_entry("int192", _msg);
    SOL_INTEGER_INT192 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT200 nd_int200_t(const char* _msg)
{
    on_entry("int200", _msg);
    SOL_INTEGER_INT200 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT208 nd_int208_t(const char* _msg)
{
    on_entry("int208", _msg);
    SOL_INTEGER_INT208 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT216 nd_int216_t(const char* _msg)
{
    on_entry("int216", _msg);
    SOL_INTEGER_INT216 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT224 nd_int224_t(const char* _msg)
{
    on_entry("int224", _msg);
    SOL_INTEGER_INT224 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT232 nd_int232_t(const char* _msg)
{
    on_entry("int232", _msg);
    SOL_INTEGER_INT232 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT240 nd_int240_t(const char* _msg)
{
    on_entry("int240", _msg);
    SOL_INTEGER_INT240 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT248 nd_int248_t(const char* _msg)
{
    on_entry("int248", _msg);
    SOL_INTEGER_INT248 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_INT256 nd_int256_t(const char* _msg)
{
    on_entry("int256", _msg);
    SOL_INTEGER_INT256 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_int128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT8 nd_uint8_t(const char* _msg)
{
    on_entry("uint8", _msg);
    SOL_INTEGER_UINT8 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%hhd", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT16 nd_uint16_t(const char* _msg)
{
    on_entry("uint16", _msg);
    SOL_INTEGER_UINT16 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%hu", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT24 nd_uint24_t(const char* _msg)
{
    on_entry("uint24", _msg);
    SOL_INTEGER_UINT24 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%u", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT32 nd_uint32_t(const char* _msg)
{
    on_entry("uint32", _msg);
    SOL_INTEGER_UINT32 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%u", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT40 nd_uint40_t(const char* _msg)
{
    on_entry("uint40", _msg);
    SOL_INTEGER_UINT40 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%lu", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT48 nd_uint48_t(const char* _msg)
{
    on_entry("uint48", _msg);
    SOL_INTEGER_UINT48 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%lu", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT56 nd_uint56_t(const char* _msg)
{
    on_entry("uint56", _msg);
    SOL_INTEGER_UINT56 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%lu", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT64 nd_uint64_t(const char* _msg)
{
    on_entry("uint64", _msg);
    SOL_INTEGER_UINT64 retval = 0;

    #ifdef MC_USE_STDINT
    scanf("%lu", &retval);
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

#ifdef MC_USE_STDINT
__int128_t nd_stdint_uint128_t(void)
{
    char input[40];
    scanf("%s", input);

    __int128_t retval = 0;
    for (unsigned int i = 0; input[i] != 0; ++i)
    {
        retval *= 10;
        retval += (__int128_t)(input[i] - '0');
    }

    return retval;
}
#endif

SOL_INTEGER_UINT72 nd_uint72_t(const char* _msg)
{
    on_entry("uint72", _msg);
    SOL_INTEGER_UINT72 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT80 nd_uint80_t(const char* _msg)
{
    on_entry("uint80", _msg);
    SOL_INTEGER_UINT80 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT88 nd_uint88_t(const char* _msg)
{
    on_entry("uint88", _msg);
    SOL_INTEGER_UINT88 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT96 nd_uint96_t(const char* _msg)
{
    on_entry("uint96", _msg);
    SOL_INTEGER_UINT96 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT104 nd_uint104_t(const char* _msg)
{
    on_entry("uint104", _msg);
    SOL_INTEGER_UINT104 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT112 nd_uint112_t(const char* _msg)
{
    on_entry("uint112", _msg);
    SOL_INTEGER_UINT112 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT120 nd_uint120_t(const char* _msg)
{
    on_entry("uint120", _msg);
    SOL_INTEGER_UINT120 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT128 nd_uint128_t(const char* _msg)
{
    on_entry("uint128", _msg);
    SOL_INTEGER_UINT128 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT136 nd_uint136_t(const char* _msg)
{
    on_entry("uint136", _msg);
    SOL_INTEGER_UINT136 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT144 nd_uint144_t(const char* _msg)
{
    on_entry("uint144", _msg);
    SOL_INTEGER_UINT144 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT152 nd_uint152_t(const char* _msg)
{
    on_entry("uint152", _msg);
    SOL_INTEGER_UINT152 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT160 nd_uint160_t(const char* _msg)
{
    on_entry("uint160", _msg);
    SOL_INTEGER_UINT160 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT168 nd_uint168_t(const char* _msg)
{
    on_entry("uint168", _msg);
    SOL_INTEGER_UINT168 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT176 nd_uint176_t(const char* _msg)
{
    on_entry("uint176", _msg);
    SOL_INTEGER_UINT176 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT184 nd_uint184_t(const char* _msg)
{
    on_entry("uint184", _msg);
    SOL_INTEGER_UINT184 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT192 nd_uint192_t(const char* _msg)
{
    on_entry("uint192", _msg);
    SOL_INTEGER_UINT192 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT200 nd_uint200_t(const char* _msg)
{
    on_entry("uint200", _msg);
    SOL_INTEGER_UINT200 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT208 nd_uint208_t(const char* _msg)
{
    on_entry("uint208", _msg);
    SOL_INTEGER_UINT208 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT216 nd_uint216_t(const char* _msg)
{
    on_entry("uint216", _msg);
    SOL_INTEGER_UINT216 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT224 nd_uint224_t(const char* _msg)
{
    on_entry("uint224", _msg);
    SOL_INTEGER_UINT224 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT232 nd_uint232_t(const char* _msg)
{
    on_entry("uint232", _msg);
    SOL_INTEGER_UINT232 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT240 nd_uint240_t(const char* _msg)
{
    on_entry("uint240", _msg);
    SOL_INTEGER_UINT240 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT248 nd_uint248_t(const char* _msg)
{
    on_entry("uint248", _msg);
    SOL_INTEGER_UINT248 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}

SOL_INTEGER_UINT256 nd_uint256_t(const char* _msg)
{
    on_entry("uint256", _msg);
    SOL_INTEGER_UINT256 retval = 0;

    #ifdef MC_USE_STDINT
    retval = nd_stdint_uint128_t();
    #elif defined MC_USE_BOOST_MP
    #error "Unimplemented."
    #endif

    return retval;
}
